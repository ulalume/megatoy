name: CI

on:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.label }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - label: Linux
            os: Linux
            runner: ubuntu-20.04
            configure: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install
            build: cmake --build build --config Release --parallel
          - label: macOS (arm64)
            os: macOS
            runner: macos-14
            configure: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_INSTALL_PREFIX=install
            build: cmake --build build --config Release --parallel
          - label: macOS (Intel)
            os: macOS
            runner: macos-13
            configure: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_INSTALL_PREFIX=install
            build: cmake --build build --config Release --parallel
          - label: Windows
            os: Windows
            runner: windows-latest
            configure: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX=install
            build: cmake --build build --config Release --parallel
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: matrix.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            libx11-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxcursor-dev \
            libxi-dev \
            libgtk-3-dev \
            xorg-dev

      - name: Configure
        run: ${{ matrix.configure }}
        shell: bash
        if: matrix.os != 'Windows'

      - name: Configure (Windows)
        if: matrix.os == 'Windows'
        shell: pwsh
        run: ${{ matrix.configure }}

      - name: Build
        run: ${{ matrix.build }}
        shell: bash
        if: matrix.os != 'Windows'

      - name: Build (Windows)
        if: matrix.os == 'Windows'
        shell: pwsh
        run: ${{ matrix.build }}

      - name: Install artifacts (Linux/macOS)
        if: matrix.os != 'Windows'
        shell: bash
        run: cmake --install build --config Release

      - name: Install artifacts (Windows)
        if: matrix.os == 'Windows'
        shell: pwsh
        run: cmake --install build --config Release
