name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create or Update Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TITLE="megatoy ${GITHUB_REF_NAME}"
          if gh release view "$GITHUB_REF_NAME" >/dev/null 2>&1; then
            gh release edit "$GITHUB_REF_NAME" --title "$TITLE" --latest
          else
            gh release create "$GITHUB_REF_NAME" --title "$TITLE" --generate-notes --latest
          fi

  build-linux:
    needs: create_release
    runs-on: ubuntu-latest
    container: ubuntu:20.04   # ← 古いglibc用
    env:
      BUILD_TYPE: Release
      VERSION: ${{ github.ref_name }}
      PACKAGE_NAME: megatoy-${{ github.ref_name }}-linux-x64
      INSTALL_PREFIX: ${{ github.workspace }}/build-release/install
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev libglu1-mesa-dev \
            libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev \
            libgtk-3-dev xorg-dev cmake pkg-config git
      - name: Configure CMake
        run: cmake -S . -B build-release -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX"
      - name: Build
        run: cmake --build build-release --config $BUILD_TYPE --parallel
      - name: Install
        run: cmake --install build-release --config $BUILD_TYPE --prefix "$INSTALL_PREFIX"
      - name: Package Artifact
        run: |
          mkdir -p dist
          DIST="dist/$PACKAGE_NAME"
          rm -rf "$DIST"
          cp "$INSTALL_PREFIX/megatoy" "$DIST/"
          chmod +x "$DIST/megatoy"
          cp -a "$INSTALL_PREFIX/presets" "$DIST/presets"
          (cd dist && zip -r "$PACKAGE_NAME.zip" "$PACKAGE_NAME")
      - name: Upload Artifact
        run: gh release upload "$GITHUB_REF_NAME" "dist/$PACKAGE_NAME.zip" --clobber

  build-macos-arm64:
    needs: create_release
    runs-on: macos-14
    env:
      BUILD_TYPE: Release
      VERSION: ${{ github.ref_name }}
      PACKAGE_NAME: megatoy-${{ github.ref_name }}-macos-arm64
      INSTALL_PREFIX: ${{ github.workspace }}/build-release/install
    steps:
      - uses: actions/checkout@v4
      - name: Configure CMake
        run: cmake -S . -B build-release -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX"
      - name: Build
        run: cmake --build build-release --config $BUILD_TYPE --parallel
      - name: Install
        run: cmake --install build-release --config $BUILD_TYPE --prefix "$INSTALL_PREFIX"
      - name: Package Artifact
        run: |
          APP="build-release/megatoy.app"
          mkdir -p dist
          ditto -c -k --keepParent "$APP" "dist/$PACKAGE_NAME.zip"
      - name: Upload Artifact
        run: gh release upload "$GITHUB_REF_NAME" "dist/$PACKAGE_NAME.zip" --clobber

  build-macos-x86_64:
    needs: create_release
    runs-on: macos-13
    env:
      BUILD_TYPE: Release
      VERSION: ${{ github.ref_name }}
      PACKAGE_NAME: megatoy-${{ github.ref_name }}-macos-x86_64
      INSTALL_PREFIX: ${{ github.workspace }}/build-release/install
    steps:
      - uses: actions/checkout@v4
      - name: Configure CMake
        run: cmake -S . -B build-release -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX"
      - name: Build
        run: cmake --build build-release --config $BUILD_TYPE --parallel
      - name: Install
        run: cmake --install build-release --config $BUILD_TYPE --prefix "$INSTALL_PREFIX"
      - name: Package Artifact
        run: |
          APP="build-release/megatoy.app"
          mkdir -p dist
          ditto -c -k --keepParent "$APP" "dist/$PACKAGE_NAME.zip"
      - name: Upload Artifact
        run: gh release upload "$GITHUB_REF_NAME" "dist/$PACKAGE_NAME.zip" --clobber

  build-windows:
    needs: create_release
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
      VERSION: ${{ github.ref_name }}
      PACKAGE_NAME: megatoy-${{ github.ref_name }}-windows-x64
      INSTALL_PREFIX: ${{ github.workspace }}/build-release/install
    steps:
      - uses: actions/checkout@v4
      - name: Configure
        shell: pwsh
        run: cmake -S . -B build-release -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX"
      - name: Build
        shell: pwsh
        run: cmake --build build-release --config $BUILD_TYPE --parallel
      - name: Install
        shell: pwsh
        run: cmake --install build-release --config $BUILD_TYPE --prefix "$INSTALL_PREFIX"
      - name: Package Artifact
        shell: pwsh
        run: |
          $dist = "dist/$env:PACKAGE_NAME"
          Remove-Item $dist -Recurse -Force -ErrorAction Ignore
          New-Item -ItemType Directory -Path $dist | Out-Null
          Copy-Item "$env:INSTALL_PREFIX\megatoy.exe" $dist -Force
          Copy-Item "$env:INSTALL_PREFIX\presets" $dist -Recurse -Force
          Compress-Archive -Path $dist -DestinationPath "$dist.zip" -Force
      - name: Upload Artifact
        shell: bash
        run: gh release upload "$GITHUB_REF_NAME" "dist/$PACKAGE_NAME.zip" --clobber
